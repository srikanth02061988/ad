import openai
import os
import logging

# Set up logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

# Set up Azure OpenAI credentials
openai.api_type = "azure"
openai.api_base = os.getenv("EFF_OAI_BASE", "")
openai.api_version = "2024-05-14"
openai.api_key = os.getenv("EFF_OAI_KEY", "")

# Create an OpenAI client
client = openai.Client(api_key=openai.api_key, timeout=120)

def test_openai_connection():
    sample_text = "This is a test to verify the connection to the OpenAI API."
    try:
        logger.info("Generating embeddings for the sample text")
        response = client.embeddings.create(
            input=[sample_text],
            model="text-embedding-ada-002"
        )
        logger.info(f"OpenAI API response: {response}")
        embedding = response['data'][0]['embedding']
        logger.info("Embeddings generated successfully")
        return embedding
    except openai.OpenAIError as e:
        logger.error(f"Error generating embeddings: {e}")
        return None
    except Exception as e:
        logger.error(f"Unexpected error: {e}")
        return None

if __name__ == "__main__":
    embedding = test_openai_connection()
    if embedding:
        print("Successfully connected to the OpenAI API and generated embeddings.")
    else:
        print("Failed to connect to the OpenAI API or generate embeddings.")
