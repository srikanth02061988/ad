import requests
import json
import os

# Set up Azure OpenAI credentials
azure_endpoint = os.getenv("EFF_OAI_BASE", "")
azure_api_key = os.getenv("EFF_OAI_KEY", "")
completion_deployment = "ajitTest"  # Completions deployment

# Define headers for Azure OpenAI API requests
headers = {
    "Content-Type": "application/json",
    "api-key": azure_api_key
}

def generate_completion(prompt, endpoint, headers, deployment):
    try:
        url = f"{endpoint}/openai/deployments/{deployment}/completions?api-version=2023-09-15-preview"
        data = {
            "prompt": prompt,
            "max_tokens": 50  # Adjust this based on your requirements
        }
        
        print(f"Request URL: {url}")
        print(f"Request Headers: {headers}")
        print(f"Request Payload: {json.dumps(data)}")
        
        response = requests.post(url, headers=headers, json=data)
        
        print(f"Response Status Code: {response.status_code}")
        print(f"Response Content: {response.content}")
        
        response.raise_for_status()
        
        result = response.json()
        text_response = result['choices'][0]['text'].strip()
        
        print(f"Response from OpenAI: {text_response}")
        
        return text_response
    except requests.exceptions.RequestException as e:
        print(f"Error generating completion: {e}")
        return None

if __name__ == "__main__":
    prompt = "Tell me a joke."
    response = generate_completion(prompt, azure_endpoint, headers, completion_deployment)
    if response:
        print("Generated Text:", response)
    else:
        print("Failed to generate text.")
