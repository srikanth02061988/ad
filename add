from openai import AzureOpenAI

client = AzureOpenAI(
    api_version="2024-02-01",
    azure_endpoint="https://effopenai.openai.azure.com/",
    api_key="7896c56d537d4f19803a4ac85bd9bc9"
)

def call_llm_model(prompt):
    response = client.chat.completions.create(
        model="ajitTest",
        messages=[
            {"role": "system", "content": "Assistant is a large language model trained by OpenAI."},
            {"role": "user", "content": prompt}
        ]
    )
    return response.choices[0].message.content.strip()

def detect_closed_domain_hallucination(reference_text, input_text, completion, num_runs=5, threshold=0.5):
    hallucination_count = 0
    prompt_template = """
    You are an AI assistant tasked with detecting closed-domain hallucinations in the following response.
    A closed-domain hallucination is an inaccurate or unmotivated claim about the given reference text.
    Please answer with "Yes" or "No" and provide a brief explanation.

    Reference: {reference_text}
    Input: {input_text}
    Response: {completion}
    Does the response contain closed-domain hallucinations? Explain your reasoning.
    """

    def get_hallucination_judgment(reference_text, input_text, completion):
        prompt = prompt_template.format(reference_text=reference_text, input_text=input_text, completion=completion)
        response = call_llm_model(prompt)
        return response

    for _ in range(num_runs):
        judgment = get_hallucination_judgment(reference_text, input_text, completion)
        if "yes" in judgment.lower():
            hallucination_count += 1

    hallucination_score = hallucination_count / num_runs
    return hallucination_score > threshold, hallucination_score, judgment

data = [
    {
        "reference": "Penguins are a group of aquatic, flightless birds living almost exclusively in the Southern Hemisphere.",
        "input": "Tell me a fact about penguins.",
        "output": "Penguins can fly in the same way that airplanes do."
    },
    {
        "reference": "Paris is the capital and most populous city of France.",
        "input": "What is the capital of France?",
        "output": "The capital of France is Paris."
    }
]

num_runs = 5

for row in data:
    reference_text = row.get('reference')
    input_prompt = row.get('input')
    output_prompt = row.get('output')

    if reference_text and input_prompt and output_prompt:
        is_hallucination, score, judgment = detect_closed_domain_hallucination(reference_text, input_prompt, output_prompt, num_runs)
        print(f"Reference: {reference_text}")
        print(f"Input: {input_prompt}")
        print(f"Output: {output_prompt}")
        print(f"Is Hallucination: {is_hallucination}, Score: {score}, Judgment: {judgment}")
        print("="*80)

